plugins {
    id 'java'
    id 'application'
}

group = 'com.jobhunter'
version = '2.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.seleniumhq.selenium:selenium-java:4.15.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.apache.tika:tika-core:2.4.1'
    implementation 'org.apache.tika:tika-parsers:2.4.1'
    implementation 'org.slf4j:slf4j-simple:2.0.9'
    implementation 'jakarta.mail:jakarta.mail-api:2.1.2'
    implementation 'org.eclipse.angus:jakarta.mail:2.0.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.0'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }
}

// Main application task
application {
    mainClass = 'com.jobhunter.Main'
}

// Task to run API-only job search (faster for CI/CD)
task runAPIJob(type: JavaExec) {
    group = 'application'
    description = 'Run API-only Job Search (faster, TOS-compliant)'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.jobhunter.APIJobRunner'
    standardOutput = System.out
    errorOutput = System.err
    jvmArgs = ['-Dfile.encoding=UTF-8', '-Dheadless=true']
    outputs.upToDateWhen { false }
}

// Smart application workflow task
task smartApply(type: JavaExec) {
    group = 'application'
    description = 'Smart job application workflow - finds best job matches'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.jobhunter.workflow.SmartApplicationWorkflow'
    standardOutput = System.out
    errorOutput = System.err
    jvmArgs = ['-Dfile.encoding=UTF-8']
    outputs.upToDateWhen { false }
}

// Setup validation task
task validateSetup(type: JavaExec) {
    group = 'verification'
    description = 'Validate Job Hunter Bot setup and configuration'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.jobhunter.SetupValidator'
    standardOutput = System.out
    errorOutput = System.err
    jvmArgs = ['-Dfile.encoding=UTF-8']
}